AWSTemplateFormatVersion: '2010-09-09'

Description: 'CI/CD for the static website hosting infrastructure'

Parameters:
  GitHubPersonalAccessToken:
    Description: 'GitHub personal access token'
    Type: String
  GitHubWebsiteRepo:
    Description: 'GitHub website repository'
    Type: String
  GitHubInfrastructureRepo:
    Description: 'GitHub infrastructure repository'
    Type: String
  GitHubUser:
    Description: 'GitHub user'
    Type: String
  ProjectName:
    Description: 'Project name'
    Type: String
    Default: example-com
  DomainName:
    Description: 'Domain name'
    Type: String
    Default: example.com

Resources:
  Secret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: GitHubPersonalAccessToken
      Description: GitHub personal access token
      SecretString: !Sub '{"OAuthToken":"${GitHubPersonalAccessToken}"}'

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-pipeline-artifacts

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-cicd-codepipeline
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${ProjectName}-cicd-codepipeline
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - cloudformation:CreateStack
                - cloudformation:DeleteStack
                - cloudformation:DescribeStacks
                - cloudformation:UpdateStack
                - cloudformation:ValidateTemplate
                Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectName}-infrastructure/*
              - Effect: Allow
                Action: s3:*
                Resource:
                - !Sub arn:aws:s3:::${ProjectName}-pipeline-artifacts*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                    - cloudformation.amazonaws.com

  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-cicd-cloudformation
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${ProjectName}-cicd-cloudformation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:*
                Resource:
                - !Sub arn:aws:s3:::${DomainName}*
              - Effect: Allow
                Action:
                - cloudfront:GetCloudFrontOriginAccessIdentity
                - cloudfront:CreateCloudFrontOriginAccessIdentity
                - cloudfront:DeleteCloudFrontOriginAccessIdentity
                - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                - cloudfront:GetDistribution
                - cloudfront:CreateDistribution
                - cloudfront:DeleteDistribution
                - cloudfront:TagResource
                Resource: "*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${ProjectName}-pipeline
      ArtifactStore:
        Type: S3
        Location:
          Ref: ArtifactBucket
      RoleArn: !GetAtt [CodePipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
            - Name: CheckoutInfrastructure
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: Infra
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubInfrastructureRepo
                Branch: master
                PollForSourceChanges: true
                OAuthToken: '{{resolve:secretsmanager:GitHubPersonalAccessToken:SecretString:OAuthToken}}'
              RunOrder: 1
            - Name: CheckoutWebsite
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: Website
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubWebsiteRepo
                Branch: master
                PollForSourceChanges: true
                OAuthToken: '{{resolve:secretsmanager:GitHubPersonalAccessToken:SecretString:OAuthToken}}'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: UpdateInfrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: Infra
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CloudFormationRole, Arn]
                StackName: !Sub ${ProjectName}-infrastructure
                Capabilities: CAPABILITY_IAM
                TemplatePath: Infra::infrastructure.yaml
                ParameterOverrides: !Sub |
                  {
                    "DomainName" : "${DomainName}"
                  }
              RunOrder: 1
            - Name: UpdateWebsite
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              InputArtifacts:
                - Name: Website
              Configuration:
                BucketName: !Sub ${DomainName}
                Extract: true
              RunOrder: 2